[tool.poetry]
authors = [
    "Elisha Dukes <88557639+lishaduck@users.noreply.github.com>",
    "Parker Hasenkamp <hasenkap@student.psdr3.org>",
]
description = "A game."
name = "text_based_game"
packages = [
    { include = "text_based_game", from = "src" },
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.scripts]
levelmake = "text_based_game.levelmake:main"
text_based_game = "text_based_game.main:main"

[tool.poetry.dependencies]
numpy = "1.26.4"
pillow = "10.2.0"
python = ">=3.11, <3.13"
readchar = "4.0.5"
rich = "13.7.1"
trio = "0.24.0"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.1"
poetry = "1.8.1"
pyright = "1.1.350"
replit-python-lsp-server = { extras = [
    "pyflakes",
    "rope",
    "yapf",
], version = "^1.5.9" }
ruff = "0.3.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
src = ["src"]
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.ruff.lint]
ignore = [
    "COM812",
    "CPY001",
    "D400",
    "E203",
    "E501",
    "ISC001",
    "PLR2004", # temporary
    "S311",
    "T201",
    "TD003",
]
preview = true # enables pylint rules
select = [
    "ALL",
    "D212",
    "D404",
    "D415",
    "D417",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
exclude = [".cache"]
include = ["src"]

pythonVersion = "3.11"
reportMissingImports = true
reportMissingTypeStubs = false
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
